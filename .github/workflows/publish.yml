name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allows manual trigger
    inputs:
      target:
        description: 'Deploy target'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: |
        twine check dist/*
        ls -la dist/
    
    # Publish to PyPI on release
    - name: Publish to PyPI
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.target == 'pypi')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        if [ -z "$TWINE_PASSWORD" ]; then
          echo "Error: PYPI_API_TOKEN secret is not set!"
          echo "Please add your PyPI API token to repository secrets."
          exit 1
        fi
        twine upload dist/*
    
    # Test on TestPyPI (optional - only if token is set)
    - name: Publish to TestPyPI
      if: github.event_name == 'workflow_dispatch' && inputs.target == 'testpypi'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        if [ -z "$TWINE_PASSWORD" ]; then
          echo "Warning: TEST_PYPI_API_TOKEN not set, skipping TestPyPI upload."
          echo "To use TestPyPI, add a TestPyPI API token to repository secrets."
          echo "Get one from: https://test.pypi.org/manage/account/token/"
          exit 0
        fi
        twine upload --repository testpypi dist/*